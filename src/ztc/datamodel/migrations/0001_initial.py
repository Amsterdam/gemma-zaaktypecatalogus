# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-30 15:15
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import ztc.datamodel.validators
import ztc.utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BesluitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datum_begin_geldigheid', ztc.utils.fields.StUFDateField(help_text='De datum waarop het is ontstaan.', max_length=9, verbose_name='datum begin geldigheid')),
                ('datum_einde_geldigheid', ztc.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het is opgeheven.', max_length=9, null=True, verbose_name='datum einde geldigheid')),
                ('besluittype_omschrijving', models.CharField(blank=True, help_text='Omschrijving van de aard van BESLUITen van het BESLUITTYPE.', max_length=80, null=True, verbose_name='besluittype omschrijving')),
                ('besluittype_omschrijving_generiek', models.CharField(blank=True, help_text='Algemeen gehanteerde omschrijving van de aard van BESLUITen van het BESLUITTYPE', max_length=80, null=True, verbose_name='besluittype omschrijving generiek')),
                ('besluitcategorie', models.CharField(blank=True, help_text='Typering van de aard van BESLUITen van het BESLUITTYPE.', max_length=40, null=True, verbose_name='besluitcategorie')),
                ('reactietermijn', models.PositiveSmallIntegerField(help_text='Het aantal dagen, gerekend vanaf de verzend- of publicatiedatum, waarbinnen verweer tegen een besluit van het besluittype mogelijk is.', validators=[django.core.validators.MaxValueValidator(999)], verbose_name='reactietermijn')),
                ('publicatie_indicatie', models.CharField(choices=[('J', 'Ja'), ('N', 'Nee')], help_text='Aanduiding of BESLUITen van dit BESLUITTYPE gepubliceerd moeten worden.', max_length=1, verbose_name='publicatie indicatie')),
                ('publicatietekst', models.CharField(blank=True, help_text='De generieke tekst van de publicatie van BESLUITen van dit BESLUITTYPE', max_length=1000, null=True, verbose_name='publicatietekst')),
                ('publicatietermijn', models.PositiveSmallIntegerField(blank=True, help_text='Het aantal dagen, gerekend vanaf de verzend- of publicatiedatum, dat BESLUITen van dit BESLUITTYPE gepubliceerd moeten blijven.', null=True, validators=[django.core.validators.MaxValueValidator(999)], verbose_name='publicatietermijn')),
                ('toelichting', models.CharField(blank=True, help_text='Een eventuele toelichting op dit BESLUITTYPE.', max_length=1000, null=True, verbose_name='toelichting')),
            ],
        ),
        migrations.CreateModel(
            name='Catalogus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domein', models.CharField(help_text='Een afkorting waarmee wordt aangegeven voor welk domein in een CATALOGUS ZAAKTYPEn zijn uitgewerkt.', max_length=5, validators=[django.core.validators.RegexValidator('^[A-Z]*$')], verbose_name='domein')),
                ('rsin', models.CharField(help_text='Het door een kamer toegekend uniek nummer voor de INGESCHREVEN NIET-NATUURLIJK PERSOON die de eigenaar is van een CATALOGUS.', max_length=9, verbose_name='rsin')),
                ('contactpersoon_beheer_naam', models.CharField(help_text='De naam van de contactpersoon die verantwoordelijk is voor het beheer van de CATALOGUS.', max_length=40, verbose_name='contactpersoon beheer naam')),
                ('contactpersoon_beheer_telefoonnummer', models.CharField(blank=True, help_text='Het telefoonnummer van de contactpersoon die verantwoordelijk is voor het beheer van de CATALOGUS.', max_length=20, null=True, verbose_name='contactpersoon beheer telefoonnummer')),
                ('contactpersoon_beheer_emailadres', models.EmailField(blank=True, help_text='Het emailadres van de contactpersoon die verantwoordelijk is voor het beheer van de CATALOGUS.', max_length=254, null=True, verbose_name='contactpersoon beheer emailadres')),
            ],
        ),
        migrations.CreateModel(
            name='Eigenschap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datum_begin_geldigheid', ztc.utils.fields.StUFDateField(help_text='De datum waarop het is ontstaan.', max_length=9, verbose_name='datum begin geldigheid')),
                ('datum_einde_geldigheid', ztc.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het is opgeheven.', max_length=9, null=True, verbose_name='datum einde geldigheid')),
                ('eigenschapnaam', models.CharField(help_text='De naam van de EIGENSCHAP', max_length=20, verbose_name='eigenschapnaam')),
                ('definitie', models.CharField(help_text='De beschrijving van de betekenis van deze EIGENSCHAP', max_length=255, verbose_name='definitie')),
                ('toelichting', models.TextField(blank=True, help_text='Een toelichting op deze EIGENSCHAP en het belang hiervan voor zaken van dit ZAAKTYPE.', max_length=1000, null=True, verbose_name='toelichting')),
            ],
        ),
        migrations.CreateModel(
            name='EigenschapReferentie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objecttype', models.CharField(blank=True, help_text='De naam van het objecttype waarbij de eigenschap is gemodelleerd in het informatiemodel waarvan het objecttype deel uit maakt.', max_length=40, null=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9 _]*$')], verbose_name='objecttype')),
                ('informatiemodel', models.CharField(blank=True, help_text='De naam en de versie van het informatiemodel waarin de eigenschap is gemodelleerd.', max_length=80, null=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9_]*$')], verbose_name='informatiemodel')),
                ('namespace', models.CharField(help_text='De naam van het schema waarin de eigenschap is opgenomen.', max_length=200, verbose_name='namespace')),
                ('schemalocatie', models.CharField(help_text='De locatie van het XML-schema behorend bij de Namespace', max_length=200, verbose_name='schemalocatie')),
                ('x_path_element', models.CharField(blank=True, help_text='De naam van de eigenschap en het pad daarnaar toe in het XML-schema behorend bij de namespace.', max_length=255, null=True, verbose_name='x path element')),
                ('entiteittype', models.CharField(help_text='De naam van de XML-constructie in het XML-schema behorend bij de namespace die afgeleid is van de naam van het objecttype en waarin de eigenschap is opgenomen.', max_length=80, verbose_name='entiteittype')),
            ],
        ),
        migrations.CreateModel(
            name='EigenschapSpecificatie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groep', models.CharField(blank=True, help_text='Benaming van het object of groepattribuut waarvan de EIGENSCHAP een inhoudelijk gegeven specificeert.', max_length=32, null=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9_]*$')], verbose_name='groep')),
                ('formaat', models.CharField(choices=[('tekst', 'tekst'), ('getal', 'getal'), ('datum', 'datum (jjjjmmdd)'), ('datum_tijd', 'datum (jjjjmmdduummss)')], help_text='Het soort tekens waarmee waarden van de EIGENSCHAP kunnen worden vastgelegd.', max_length=20, verbose_name='formaat')),
                ('lengte', models.CharField(help_text='Het aantal karakters (lengte) waarmee waarden van de EIGENSCHAP worden vastgelegd.', max_length=14, verbose_name='lengte')),
                ('kardinaliteit', models.CharField(help_text='Het aantal mogelijke voorkomens van waarden van deze EIGENSCHAP bij een zaak van het ZAAKTYPE.', max_length=3, validators=[ztc.datamodel.validators.KardinaliteitValidator], verbose_name='kardinaliteit')),
                ('waardenverzameling', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(help_text='Een waarde die deze EIGENSCHAP kan hebben.', max_length=100, verbose_name='waardenverzameling'), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='InformatieObjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datum_begin_geldigheid', ztc.utils.fields.StUFDateField(help_text='De datum waarop het is ontstaan.', max_length=9, verbose_name='datum begin geldigheid')),
                ('datum_einde_geldigheid', ztc.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het is opgeheven.', max_length=9, null=True, verbose_name='datum einde geldigheid')),
                ('informatieobjecttype_omschrijving', models.CharField(help_text='Omschrijving van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE.', max_length=80, verbose_name='informatieobjecttype omschrijving')),
                ('informatieobjectcategorie', models.CharField(help_text='Typering van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE.', max_length=80, verbose_name='informatieobjectcategorie')),
                ('informatieobjecttypetrefwoord', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(help_text='Trefwoord(en) waarmee informatieobjecten van het INFORMATIEOBJECTTYPE kunnen worden gekarakteriseerd.', max_length=30, verbose_name='informatieobjecttypetrefwoord'), size=None)),
                ('vertrouwelijkheidaanduiding', models.CharField(blank=True, choices=[('zeer_geheim', 'zeer geheim'), ('geheim', 'geheim'), ('confidentieel', 'confidentieel'), ('vertrouwelijk', 'vertrouwelijk'), ('zaakvertrouwelijk', 'zaakvertrouwelijk'), ('intern', 'intern'), ('beperkt_openbaar', 'beperkt openbaar'), ('openbaar', 'openbaar')], help_text='Aanduiding van de mate waarin informatieobjecten van dit INFORMATIEOBJECTTYPE voor de openbaarheid bestemd zijn.', max_length=20, null=True, verbose_name='vertrouwelijkheidaanduiding')),
                ('model', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(help_text='De URL naar het model / sjabloon dat wordt gebruikt voor de creatie van informatieobjecten van dit INFORMATIEOBJECTTYPE.', verbose_name='model'), size=None)),
                ('toelichting', models.TextField(blank=True, help_text='Een eventuele toelichting op dit INFORMATIEOBJECTTYPE.', max_length=1000, null=True, verbose_name='toelichting')),
            ],
        ),
        migrations.CreateModel(
            name='InformatieObjectTypeOmschrijvingGeneriek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datum_begin_geldigheid', ztc.utils.fields.StUFDateField(help_text='De datum waarop het is ontstaan.', max_length=9, verbose_name='datum begin geldigheid')),
                ('datum_einde_geldigheid', ztc.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het is opgeheven.', max_length=9, null=True, verbose_name='datum einde geldigheid')),
                ('informatieobjecttype_omschrijving_generiek', models.CharField(help_text='Algemeen gehanteerde omschrijving van het type informatieobject.', max_length=80, verbose_name='informatieobjecttype omschrijving generiek')),
                ('definitie_informatieobjecttype_omschrijving_generiek', models.CharField(help_text='Nauwkeurige beschrijving van het generieke type informatieobject', max_length=255, verbose_name='definitie informatieobjecttype omschrijving generiek')),
                ('herkomst_informatieobjecttype_omschrijving_generiek', models.CharField(help_text='De naam van de waardenverzameling, of van de beherende organisatie daarvan, waaruit de waarde is overgenomen.', max_length=12, verbose_name='herkomst informatieobjecttype omschrijving generiek')),
                ('hierarchie_informatieobjecttype_omschrijving_generiek', models.CharField(help_text='De plaats in de rangorde van het informatieobjecttype.', max_length=80, verbose_name='hierarchie informatieobjecttype omschrijving generiek')),
                ('opmerking_informatieobjecttype_omschrijving_generiek', models.CharField(blank=True, help_text='Zinvolle toelichting bij het informatieobjecttype', max_length=255, null=True, verbose_name='opmerking informatieobjecttype omschrijving generiek')),
            ],
        ),
        migrations.AddField(
            model_name='informatieobjecttype',
            name='informatieobjecttype_omschrijving_generiek',
            field=models.ForeignKey(blank=True, help_text='Algemeen gehanteerde omschrijving van het INFORMATIEOBJECTTYPE.', null=True, on_delete=django.db.models.deletion.CASCADE, to='datamodel.InformatieObjectTypeOmschrijvingGeneriek', verbose_name='informatieobjecttype omschrijving generiek'),
        ),
        migrations.AddField(
            model_name='informatieobjecttype',
            name='maakt_deel_uit_van',
            field=models.ForeignKey(help_text='De CATALOGUS waartoe dit INFORMATIEOBJECTTYPE behoort.', on_delete=django.db.models.deletion.CASCADE, to='datamodel.Catalogus', verbose_name='maakt deel uit van'),
        ),
        migrations.AddField(
            model_name='eigenschap',
            name='referentie_naar_eigenschap',
            field=models.ForeignKey(blank=True, help_text='Verwijzing naar de standaard waarin de eigenschap is gespecificeerd', null=True, on_delete=django.db.models.deletion.CASCADE, to='datamodel.EigenschapReferentie', verbose_name='referentie naar eigenschap'),
        ),
        migrations.AddField(
            model_name='eigenschap',
            name='specificatie_van_eigenschap',
            field=models.ForeignKey(blank=True, help_text='Attribuutkenmerken van de eigenschap', null=True, on_delete=django.db.models.deletion.CASCADE, to='datamodel.EigenschapSpecificatie', verbose_name='specificatie van eigenschap'),
        ),
        migrations.AlterUniqueTogether(
            name='catalogus',
            unique_together=set([('domein', 'rsin')]),
        ),
        migrations.AddField(
            model_name='besluittype',
            name='maakt_deel_uit_van',
            field=models.ForeignKey(help_text='De CATALOGUS waartoe dit BESLUITTYPE behoort.', on_delete=django.db.models.deletion.CASCADE, to='datamodel.Catalogus', verbose_name='maakt deel uit van Catalogus'),
        ),
        migrations.AddField(
            model_name='besluittype',
            name='wordt_vastgelegd_in',
            field=models.ManyToManyField(blank=True, help_text='Het INFORMATIEOBJECTTYPE van informatieobjecten waarin besluiten van dit BESLUITTYPE worden vastgelegd.', to='datamodel.InformatieObjectType'),
        ),
        migrations.AlterUniqueTogether(
            name='informatieobjecttype',
            unique_together=set([('maakt_deel_uit_van', 'informatieobjecttype_omschrijving')]),
        ),
        migrations.AlterUniqueTogether(
            name='besluittype',
            unique_together=set([('maakt_deel_uit_van', 'besluittype_omschrijving')]),
        ),
    ]
